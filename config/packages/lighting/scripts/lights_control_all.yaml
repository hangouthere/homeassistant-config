script:
  # Turn off all lights, except for the Living Room Lamp
  lights_lamp_only:
    alias: 'Lights - Lamp Only'
    description: 'Turns off all the lights in the entire house, EXCEPT Living Room Lamp'
    sequence:
      - condition: template
        value_template: >
          {%- set excludes = ['light.lamp'] -%}
          {{ states.light | rejectattr('state', 'eq', 'off') | rejectattr('entity_id', 'in', excludes) | map(attribute='entity_id') | list | count > 0 }}
      - service: light.turn_off
        data_template:
          entity_id: >-
            {%- set excludes = ['light.lamp'] -%}
            {{ states.light | rejectattr('state', 'eq', 'off') | rejectattr('entity_id', 'in', excludes) | map(attribute='entity_id') | list | join(", ") }}

  # Turn all the lights OFF that are currently ON
  lights_all_off:
    alias: 'Lights - Turn All OFF'
    description: 'Turns off all the lights in the entire house'
    sequence:
      - condition: template
        value_template: >
            {{ states.light | rejectattr('state', 'eq', 'off') | map(attribute='entity_id') | list | count > 0 }}
      - service: light.turn_off
        data_template:
          entity_id: >-
            {{ states.light | rejectattr('state', 'eq', 'off') | map(attribute='entity_id') | list | join(", ") }}

  # Turn all lights ON
  lights_all_on:
    alias: 'Lights - Turn All On'
    description: 'Turns on all the lights in the entire house'
    sequence:
      - condition: template
        value_template: >
            {{ states.light | rejectattr('state', 'eq', 'on') | map(attribute='entity_id') | list | count > 0 }}
      - service: light.turn_on
        data_template:
          entity_id: >-
            {{ states.light | rejectattr('state', 'eq', 'on') | map(attribute='entity_id') | list | join(", ") }}
