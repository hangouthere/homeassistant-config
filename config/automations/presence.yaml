# Detect Presence of Codex
#  Currently only uses mobile app

- alias: 'Presence - Codex Detected'
  initial_state: true
  trigger:
    - platform: state
      entity_id: device_tracker.phone_codex
      to: 'home'
      for:
        minutes: 5
    - platform: state
      entity_id: device_tracker.phone_codex
      from: 'home'
  action:
    - service: system_log.write
      data_template:
        message: "Presence Change for Codex Triggered - {{ trigger }}"
        level: warning
    - entity_id: input_boolean.presence_codex
      service_template : >-
        {% set service = 'turn_on' if trigger.to_state.state == 'home' else 'turn_off' %}
        input_boolean.{{ service }}

# Detect Presence of Frecs
#  Currently only uses mobile app

- alias: 'Presence - Frecs Detected'
  initial_state: true
  trigger:
    - platform: state
      entity_id: device_tracker.phone_frecs
      to: 'home'
      for:
        minutes: 5
    - platform: state
      entity_id: device_tracker.phone_frecs
      from: 'home'
  action:
    - service: system_log.write
      data_template:
        message: "Presence Change for Frecs Triggered - {{ trigger }}"
        level: warning
    - entity_id: input_boolean.presence_frecs
      service_template : >-
        {%- set service = 'turn_on' if trigger.to_state.state == 'home' else 'turn_off' -%}
        input_boolean.{{ service }}

# Trigger Consensus Update when a presence status per person changes
#   Each person should be represented by their own boolean for Consensus to operate properly

- alias: 'Presence - Needs Consensus Update'
  initial_state: true
  trigger:
    - platform: state
      entity_id: input_boolean.presence_codex
    - platform: state
      entity_id: input_boolean.presence_frecs
  action:
    - service: system_log.write
      data_template:
        message: "Presence Consensus Unknown, Needs Update - {{ trigger }}"
        level: warning
    - service: homeassistant.update_entity
      entity_id: sensor.presence_consensus

# Detect Consensus Change (ie, someone left or arrived)

- alias: 'Presence - Overall State'
  initial_state: true
  trigger:
    - platform: state
      entity_id: sensor.presence_consensus
  action:
    - service: system_log.write
      data_template:
        message: "Presence Consensus Change Triggered - {{ trigger }}"
        level: warning
